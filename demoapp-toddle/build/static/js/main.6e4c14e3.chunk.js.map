{"version":3,"sources":["components/Board.jsx","containers/IndexBoard.jsx","components/NavHeader.jsx","App.js","index.js"],"names":["Board","props","addIndent","i","currIndent","state","boardData","indent","setState","prevState","map","el","ind","removeIndent","addRow","newData","push","text","removeRow","len","length","count","pIndent","splice","onInputChange","value","onChangeHeader","boardName","id","board","name","data","that","this","dragProps","onDragEnd","fromIndex","toIndex","console","log","fi2","packageLen1","ti2","item","final","slice","nodeSelector","handleSelector","ListGroup","Item","className","placeholder","onChange","event","target","toUpperCase","OverlayTrigger","overlay","Tooltip","size","onClick","removeBoard","saveBoard","Row","Col","xs","lg","as","key","charAt","Button","Component","IndexBoard","newBoard","boardId","a","boards","index","findIndex","x","updatedBoards","Object","assign","updatedState","fetch","method","headers","body","JSON","stringify","then","resp","json","res","err","idCount","fileName","result","error","Container","fluid","saving","addBoard","NavHeader","sticky","bg","expand","Brand","Link","to","Nav","App","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"ocAoMeA,G,yDAvLX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IASVC,UAAY,SAACC,GACT,IAAIC,EAAa,EAAKC,MAAMC,UAAUH,GAAGI,OACrCH,EAAa,IACbA,GAAc,EACd,EAAKI,UAAS,SAAAC,GAAS,MAAK,CACxBH,UAAWG,EAAUH,UAAUI,KAC3B,SAACC,EAAIC,GAAL,OAAaA,IAAQT,EAAR,2BAAiBQ,GAAjB,IAAqBJ,OAAQH,IAAeO,WAhBtD,EAsBnBE,aAAe,SAACV,GACZ,IAAIC,EAAa,EAAKC,MAAMC,UAAUH,GAAGI,OACrCH,EAAa,IACbA,GAAc,EACd,EAAKI,UAAS,SAAAC,GAAS,MAAK,CACxBH,UAAWG,EAAUH,UAAUI,KAC3B,SAACC,EAAIC,GAAL,OAAaA,IAAQT,EAAR,2BAAiBQ,GAAjB,IAAqBJ,OAAQH,IAAeO,WA5BtD,EAkCnBG,OAAS,WACL,EAAKN,UAAS,SAAAC,GACV,IAAIM,EAAO,YAAON,EAAUH,WAE5B,OADAS,EAAQC,KAAK,CAAEC,KAAM,GAAIV,OAAQ,IAC1B,2BAAKE,GAAZ,IAAuBH,UAAWS,QAtCvB,EA0CnBG,UAAY,SAACf,GACT,IAAIgB,EAAM,EAAKd,MAAMC,UAAUc,OAC/B,GAAID,EAAM,EAAG,CAGT,IAFA,IAAIE,EAAQlB,EAAI,EACVmB,EAAU,EAAKjB,MAAMC,UAAUH,GAAGI,OACjCc,EAAQF,GAAO,EAAKd,MAAMC,UAAUe,GAAOd,OAASe,GAASD,IACpE,EAAKb,UAAS,SAAAC,GACV,IAAIM,EAAO,YAAON,EAAUH,WAE5B,OADAS,EAAQQ,OAAOpB,EAAGkB,EAAQlB,GACnB,CAAEG,UAAWS,WAGxB,EAAKP,UAAS,SAAAC,GAAS,MACnB,CAAEH,UAAW,CAAC,CAAEW,KAAM,GAAIV,OAAQ,SAvD3B,EA4DnBiB,cAAgB,SAACC,EAAOtB,GACpB,IAAIY,EAAO,YAAO,EAAKV,MAAMC,WAC7BS,EAAQZ,GAAGc,KAAOQ,EAClB,EAAKjB,SAAS,CAAEF,UAAWS,KA/DZ,EAkEnBW,eAAiB,SAACD,GACd,EAAKjB,SAAS,CACVmB,UAAWF,KAlEf,EAAKpB,MAAQ,CACTuB,GAAI,EAAK3B,MAAM4B,MAAMD,GACrBD,UAAW,EAAK1B,MAAM4B,MAAMC,KAC5BxB,UAAW,EAAKL,MAAM4B,MAAME,MALjB,E,qDAwET,IAAD,OACCC,EAAOC,KACPC,EAAY,CACdC,UADc,SACJC,EAAWC,GACjBC,QAAQC,IAAI,aAAcH,EAAW,YAAaC,GAKlD,IAJA,IAAMN,EAAI,YAAOC,EAAK3B,MAAMC,WACtBa,EAAMY,EAAKX,OAEboB,EAAMJ,EAAY,EACfI,EAAMrB,GAA4B,IAArBY,EAAKS,GAAKjC,QAAciC,IAK5C,IAHA,IAAIC,IADJD,EACwBJ,EAAY,EAEhCM,EAAML,EAAU,EACbK,EAAMvB,GAA4B,IAArBY,EAAKW,GAAKnC,QAAcmC,IAC5CA,IAEA,IAAMC,EAAOZ,EAAKR,OAAOa,EAAWK,GACpC,GAAIL,EAAYC,EAAS,CACrB,IAAMO,EAAK,sBACJb,EAAKc,MAAM,EAAGR,IADV,YAEJM,GAFI,YAGJZ,EAAKc,MAAMR,KAElBL,EAAKxB,SAAS,CAAEF,UAAWsC,QACxB,CACH,IAAMA,EAAK,sBACJb,EAAKc,MAAM,EAAGH,EAAM,EAAID,IADpB,YAEJE,GAFI,YAGJZ,EAAKc,MAAMH,EAAM,EAAID,KAE5BT,EAAKxB,SAAS,CAAEF,UAAWsC,MAGnCE,aAAc,KACdC,eAAgB,OAEpB,OACI,oCACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAUC,KAAX,CAAgBC,UAAU,uBACtB,2BAAOC,YAAY,eAAeD,UAAU,eACxCE,SAAU,SAACC,GAAD,OAAW,EAAK3B,eAAe2B,EAAMC,OAAO7B,QACtDA,MAAOQ,KAAK5B,MAAMsB,UAAU4B,gBAChC,kBAACC,EAAA,EAAD,CAAgBN,UAAU,UAAUO,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,WACzC,kBAAC,IAAD,CAAiBsB,UAAU,mBAAmBS,KAAK,QAAQC,QAAS,kBAAM,EAAK3D,MAAM4D,YAAY,EAAKxD,WAE1G,kBAACmD,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,SACrB,kBAAC,IAAD,CAAmBsB,UAAU,mBAAmBS,KAAK,QAAQC,QAAS,kBAAM,EAAK3D,MAAM6D,UAAU,CAAElC,GAAI,EAAKvB,MAAMuB,GAAIE,KAAM,EAAKzB,MAAMsB,UAAWI,KAAM,EAAK1B,MAAMC,iBAG3K,kBAAC0C,EAAA,EAAUC,KAAX,KACI,kBAACc,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,IAAIhB,UAAU,aACrB,yBAAKA,UAAU,uCACX,uCACA,iEAGR,kBAACc,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,IAAIhB,UAAU,aACrB,yBAAKA,UAAU,uCACX,wCACA,8DAKhB,kBAAC,IAAsBhB,EACnB,yBAAKiC,GAAG,MACHlC,KAAK5B,MAAMC,UAAUI,KAAI,SAACqB,EAAM5B,GAAP,OACtB,kBAAC6C,EAAA,EAAUC,KAAX,CAAgBkB,GAAIpC,EAAKxB,OAAL,WAA4B6D,IAAKjE,EAAG+C,UAAU,kBAC9D,kBAACa,EAAA,EAAD,CAAKb,UAAU,aACX,kBAACc,EAAA,EAAD,CAAKC,IAAE,EAACC,GAAG,IAAIhB,UAAU,kBACrB,4BAAQA,UAAU,kBAAiB,kBAACM,EAAA,EAAD,CAAgBW,GAAG,SAASV,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,SACpE,kBAAC,IAAD,CAAcsB,UAAU,OAAOS,KAAK,YAExC,kBAACH,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,YACrB,kBAAC,IAAD,CAAkBsB,UAAU,OAAOS,KAAK,QAAQC,QAAS,kBAAM,EAAK/C,aAAaV,EAAG,SAExF,kBAACqD,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,WACrB,kBAAC,IAAD,CAAmBsB,UAAU,OAAOS,KAAK,QAAQC,QAAS,kBAAM,EAAK1D,UAAUC,EAAG,SAEtF,kBAACqD,EAAA,EAAD,CAAgBC,QAAS,kBAACC,EAAA,EAAD,CAAS9B,GAAG,oBAAZ,WACrB,kBAAC,IAAD,CAAiBsB,UAAU,OAAOS,KAAK,QAAQC,QAAS,kBAAM,EAAK1C,UAAUf,QAGrF,kBAAC6D,EAAA,EAAD,CAAKC,GAAI,EAAGf,UAAW,eAAiBnB,EAAKxB,QACzC,yBAAK2C,UAAS,oBAGlB,kBAACc,EAAA,EAAD,CAAKd,UAAW,4BAA8BnB,EAAKxB,QAC/C,2BAAO4C,YAAY,oCACfC,SAAU,SAACC,GAAD,OAAW,EAAK7B,cAAc6B,EAAMC,OAAO7B,MAAOtB,IAC5DsB,MAAOM,EAAKd,KAAKoD,OAAO,GAAGd,cAAgBxB,EAAKd,KAAK4B,MAAM,cAS3F,kBAAEyB,EAAA,EAAF,CAASpB,UAAU,4BAA4BU,QAAS3B,KAAKnB,QACzD,kBAAC,IAAD,CAAcoC,UAAU,OAAOS,KAAK,UADxC,uB,GA/KIY,cCiGLC,G,yDApGX,WAAYvE,GAAQ,IAAD,8BACf,cAAMA,IAsBV6D,UAvBmB,uCAuBP,WAAOW,EAAUC,GAAjB,uBAAAC,EAAA,sDACAC,EAAW,EAAKvE,MAAhBuE,OACFC,EAAQD,EAAOE,WAAU,SAAAC,GAAC,OAAIA,EAAEnD,KAAO8C,KACvCM,EAHE,sBAIDJ,EAAO/B,MAAM,EAAGgC,IAJf,CAKJI,OAAOC,OAAO,GAAIT,IALd,YAMDG,EAAO/B,MAAMgC,EAAQ,KAEtBM,EAAeF,OAAOC,OAAO,GAAI,EAAK7E,MAAO,CAAEuE,OAAQI,IACvDhD,EATE,eAURoD,MAAM,aAAc,CAChBC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAGpBC,KAAMC,KAAKC,UAAUN,KACtBO,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAChBF,MAEG,SAACG,GAAD,OAAS7D,EAAKxB,SAAS,CAAEoE,OAAQI,IAAiB,kBAAM1C,QAAQC,IAAI,eAAgBkC,SACpF,SAACqB,GAAD,OAASxD,QAAQC,IAAR,+BAAoCuD,EAApC,SArBT,2CAvBO,wDAEf,EAAKzF,MAAQ,CACT0F,QAAS,EACTnB,OAAQ,GACRoB,SAAU,IALC,E,gEASE,IAAD,OAChBZ,MAAM,aACDM,MAAK,SAAAG,GAAG,OAAIA,EAAID,UAChBF,MACG,SAACO,GACG3D,QAAQC,IAAI,sBAAuB0D,GACnC,EAAKzF,SAASyF,MAElB,SAACC,GACG5D,QAAQC,IAAI,2BAA4B2D,Q,kCAyC5CxB,GAAU,IACVE,EAAW3C,KAAK5B,MAAhBuE,OACFC,EAAQD,EAAOE,WAAU,SAAAC,GAAC,OAAIA,EAAEnD,KAAO8C,KAC7CzC,KAAKzB,SAAS,CACVoE,OAAO,GAAD,mBACCA,EAAO/B,MAAM,EAAGgC,IADjB,YAECD,EAAO/B,MAAMgC,EAAQ,S,iCAMhC5C,KAAKzB,SAAS,CACVoE,OAAO,GAAD,mBACC3C,KAAK5B,MAAMuE,QADZ,CAEF,CAAEhD,GAAIK,KAAK5B,MAAM0F,QAAU,EAAGjE,KAAM,GAAIC,KAAM,CAAC,CAAEd,KAAM,GAAIV,OAAQ,OAEvEwF,QAAS9D,KAAK5B,MAAM0F,QAAU,M,+BAI5B,IAAD,OAEL,OACI,kBAACI,EAAA,EAAD,CAAWC,MAAM,KAAKlD,UAAU,wBAC3BjB,KAAK5B,MAAMuE,OAAOlE,KAAI,SAACmB,EAAO1B,GAAR,OACnB,kBAAE,EAAF,CAAiB+C,UAAU,YAAYkB,IAAKvC,EAAMD,GAAIC,MAAOA,EAAOwE,OAAQ,EAAKhG,MAAMgG,OACnFC,SAAU,kBAAM,EAAKA,YACrBzC,YAAa,kBAAM,EAAKA,YAAYhC,EAAMD,KAC1CkC,UAAW,SAACW,GAAD,OAAc,EAAKX,UAAUW,EAAU5C,EAAMD,UAEhE,kBAAE0C,EAAA,EAAF,CAASpB,UAAU,6CAA6CU,QAAS,kBAAM,EAAK0C,aAChF,kBAAC,IAAD,CAAcpD,UAAU,OAAOS,KAAK,UADxC,sB,GA3FSY,c,gBCsBVgC,E,uKAtBP,OACI,oCACI,kBAAC,IAAD,CAAQC,OAAO,MAAMC,GAAG,QAAQC,OAAO,MACnC,kBAAC,IAAOC,MAAR,CAAcxC,GAAIyC,IAAMC,GAAG,KAA3B,WAGA,kBAACC,EAAA,EAAD,CAAK5D,UAAU,WACX,kBAAC4D,EAAA,EAAIF,KAAL,CAAUzC,GAAIyC,IAAMC,GAAG,UAAvB,UAIJ,kBAACC,EAAA,EAAD,CAAK5D,UAAU,WACX,kBAAC4D,EAAA,EAAIF,KAAL,CAAUzC,GAAIyC,IAAMC,GAAG,KAAvB,gB,GAfAtC,aCClBwC,E,4MACF1G,MAAQ,CACJ0B,KAAM,M,uDAIN,OACI,kBAAC,IAAD,KACI,yBAAKmB,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO8D,KAAK,IAAIC,OAAK,EAACC,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,SAASC,OAAK,EAACC,UAAW1C,W,GAZ5CD,aAoBZ4C,EAAO,kBACT,6BACI,gCACI,yBAAKjE,UAAU,QACX,yCACA,yBAAKA,UAAU,QACX,uDAOL6D,I,OCjCfK,IAASC,OAEL,kBAAC,EAAD,MAEAC,SAASC,eAAe,W","file":"static/js/main.6e4c14e3.chunk.js","sourcesContent":["/*\r\n* This class uses state to update the component\r\n* Changes modifies the state of the component\r\n*/\r\n\r\nimport React, { Component } from 'react';\r\nimport ReactDragListView from 'react-drag-listview';\r\nimport { Row, Col, ListGroup, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport { BsArrowsMove, BsArrowRightShort, BsArrowLeftShort, BsFillTrashFill, BsPlusCircle, BsFileEarmarkText } from 'react-icons/bs';\r\n\r\nimport './Board.scss'\r\n\r\nclass Board extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: this.props.board.id,\r\n            boardName: this.props.board.name,\r\n            boardData: this.props.board.data,\r\n            // saving: this.props.saving\r\n        }\r\n    }\r\n\r\n    addIndent = (i) => {\r\n        var currIndent = this.state.boardData[i].indent;\r\n        if (currIndent < 1) {\r\n            currIndent += 1;\r\n            this.setState(prevState => ({\r\n                boardData: prevState.boardData.map(\r\n                    (el, ind) => ind === i ? { ...el, indent: currIndent } : el\r\n                )\r\n            }));\r\n        }\r\n    }\r\n\r\n    removeIndent = (i) => {\r\n        var currIndent = this.state.boardData[i].indent;\r\n        if (currIndent > 0) {\r\n            currIndent -= 1;\r\n            this.setState(prevState => ({\r\n                boardData: prevState.boardData.map(\r\n                    (el, ind) => ind === i ? { ...el, indent: currIndent } : el\r\n                )\r\n            }));\r\n        }\r\n    }\r\n\r\n    addRow = () => {\r\n        this.setState(prevState => {\r\n            var newData = [...prevState.boardData];\r\n            newData.push({ text: '', indent: 0 });\r\n            return { ...prevState, boardData: newData }\r\n        })\r\n    }\r\n\r\n    removeRow = (i) => {\r\n        var len = this.state.boardData.length;\r\n        if (len > 1) {\r\n            var count = i + 1;\r\n            const pIndent = this.state.boardData[i].indent;\r\n            while (count < len && this.state.boardData[count].indent > pIndent) count++;\r\n            this.setState(prevState => {\r\n                var newData = [...prevState.boardData];\r\n                newData.splice(i, count - i);\r\n                return { boardData: newData }\r\n            })\r\n        } else {\r\n            this.setState(prevState => (\r\n                { boardData: [{ text: '', indent: 0 }] }\r\n            ))\r\n        }\r\n    }\r\n\r\n    onInputChange = (value, i) => {\r\n        var newData = [...this.state.boardData];\r\n        newData[i].text = value;\r\n        this.setState({ boardData: newData });\r\n    }\r\n\r\n    onChangeHeader = (value) => {\r\n        this.setState({\r\n            boardName: value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const that = this;\r\n        const dragProps = {\r\n            onDragEnd(fromIndex, toIndex) {\r\n                console.log(\"fromIndex:\", fromIndex, \" toIndex:\", toIndex);\r\n                const data = [...that.state.boardData];\r\n                const len = data.length;\r\n\r\n                var fi2 = fromIndex + 1;\r\n                while (fi2 < len && data[fi2].indent === 1) fi2++;\r\n                fi2--;\r\n                var packageLen1 = fi2 - fromIndex + 1\r\n\r\n                var ti2 = toIndex + 1;\r\n                while (ti2 < len && data[ti2].indent === 1) ti2++;\r\n                ti2--;\r\n\r\n                const item = data.splice(fromIndex, packageLen1);\r\n                if (fromIndex > toIndex) {\r\n                    const final = [\r\n                        ...data.slice(0, toIndex),\r\n                        ...item,\r\n                        ...data.slice(toIndex),\r\n                    ]\r\n                    that.setState({ boardData: final });\r\n                } else {\r\n                    const final = [\r\n                        ...data.slice(0, ti2 + 1 - packageLen1),\r\n                        ...item,\r\n                        ...data.slice(ti2 + 1 - packageLen1),\r\n                    ]\r\n                    that.setState({ boardData: final });\r\n                }\r\n            },\r\n            nodeSelector: 'li',\r\n            handleSelector: 'div'\r\n        };\r\n        return (\r\n            <>\r\n                <ListGroup>\r\n                    <ListGroup.Item className='board-header d-flex'>\r\n                        <input placeholder='Board Name..' className='justify-self'\r\n                            onChange={(event) => this.onChangeHeader(event.target.value)}\r\n                            value={this.state.boardName.toUpperCase()} />\r\n                        <OverlayTrigger className='ml-auto' overlay={<Tooltip id=\"tooltip-disabled\">Remove</Tooltip>}>\r\n                            <BsFillTrashFill className='mr-2 float-right' size='1.2em' onClick={() => this.props.removeBoard(this.state)} />\r\n                        </OverlayTrigger>\r\n                        <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Save</Tooltip>}>\r\n                            <BsFileEarmarkText className='mr-2 float-right' size='1.2em' onClick={() => this.props.saveBoard({ id: this.state.id, name: this.state.boardName, data: this.state.boardData })} />\r\n                        </OverlayTrigger>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col xs lg='2' className='text-left'>\r\n                                <div className='d-flex flex-column board-sub-header'>\r\n                                    <h5>Actions</h5>\r\n                                    <span>Move, Indent, Outdent, Delete</span>\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs lg='2' className='text-left'>\r\n                                <div className='d-flex flex-column board-sub-header'>\r\n                                    <h5>Standard</h5>\r\n                                    <span>The text of the standard</span>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ReactDragListView {...dragProps} >\r\n                        <div as='ol'>\r\n                            {this.state.boardData.map((data, i) => (\r\n                                <ListGroup.Item as={data.indent ? `div` : `li`} key={i} className='text-left py-0' >\r\n                                    <Row className='board-row'>\r\n                                        <Col xs lg='2' className='py-2 col-icons'>\r\n                                            <button className='button-dragger'><OverlayTrigger as='button' overlay={<Tooltip id=\"tooltip-disabled\">Move</Tooltip>}>\r\n                                                <BsArrowsMove className='mr-2' size='1.2em' />\r\n                                            </OverlayTrigger></button>\r\n                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Outdent</Tooltip>}>\r\n                                                <BsArrowLeftShort className='mr-2' size='1.2em' onClick={() => this.removeIndent(i, 'O')} />\r\n                                            </OverlayTrigger>\r\n                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Indent</Tooltip>}>\r\n                                                <BsArrowRightShort className='mr-2' size='1.2em' onClick={() => this.addIndent(i, 'I')} />\r\n                                            </OverlayTrigger>\r\n                                            <OverlayTrigger overlay={<Tooltip id=\"tooltip-disabled\">Delete</Tooltip>}>\r\n                                                <BsFillTrashFill className='mr-2' size='1.2em' onClick={() => this.removeRow(i)} />\r\n                                            </OverlayTrigger>\r\n                                        </Col>\r\n                                        <Col xs={1} className={`pl-0 indent-` + data.indent}>\r\n                                            <div className={`col-separator `} />\r\n                                            {/* <div className={`col-separator ` + `ml-` + (data.indent ? data.indent + 1 : 0)} /> */}\r\n                                        </Col>\r\n                                        <Col className={`p-2 col-text indent-text-` + data.indent}>\r\n                                            <input placeholder='Type standard here (e.g. Numbers)'\r\n                                                onChange={(event) => this.onInputChange(event.target.value, i)}\r\n                                                value={data.text.charAt(0).toUpperCase() + data.text.slice(1)} />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </ListGroup.Item>\r\n                            ))}\r\n                        </div>\r\n                    </ReactDragListView>\r\n                </ListGroup>\r\n\r\n                < Button className='add-button mt-2 btn-block' onClick={this.addRow}>\r\n                    <BsPlusCircle className='mr-2' size='1.2em' />\r\n                        Add a standard\r\n                </Button>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\r\nimport { Container, Button } from 'react-bootstrap';\r\nimport { BsPlusCircle } from 'react-icons/bs';\r\n\r\nimport BoardComponent from '../components/Board';\r\nimport './indexBoard.scss';\r\n\r\n\r\nclass IndexBoard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            idCount: 0,\r\n            boards: [],\r\n            fileName: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`/readjson`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    console.log('fetched on mount : ', result);\r\n                    this.setState(result);\r\n                },\r\n                (error) => {\r\n                    console.log('fetching on mount error:', error);\r\n                }\r\n            )\r\n    }\r\n\r\n    saveBoard = async (newBoard, boardId) => {\r\n        const { boards } = this.state;\r\n        const index = boards.findIndex(x => x.id === boardId);\r\n        const updatedBoards = [\r\n            ...boards.slice(0, index),\r\n            Object.assign({}, newBoard),\r\n            ...boards.slice(index + 1)\r\n        ]\r\n        const updatedState = Object.assign({}, this.state, { boards: updatedBoards })\r\n        const that = this;\r\n        fetch('/writejson', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                // 'Access-Control-Allow-Origin': '*'\r\n            },\r\n            body: JSON.stringify(updatedState)\r\n        }).then(resp => resp.json())\r\n            .then(\r\n                // (res) => this.setState({updatedState}),\r\n                (res) => that.setState({ boards: updatedBoards }, () => console.log(\"Board Saved \", newBoard)),\r\n                (err) => console.log(`Couldn't save Error: ${err} `),\r\n\r\n            );\r\n    }\r\n\r\n    // handleSaveToPC = jsonData => {\r\n    //     const fileData = JSON.stringify(jsonData);\r\n    //     const blob = new Blob([fileData], { type: \"text/plain\" });\r\n    //     const url = URL.createObjectURL(blob);\r\n    //     const link = document.createElement('a');\r\n    //     link.download = 'filename.json';\r\n    //     link.href = url;\r\n    //     link.click();\r\n    // }\r\n\r\n    removeBoard(boardId) {\r\n        const { boards } = this.state;\r\n        const index = boards.findIndex(x => x.id === boardId);\r\n        this.setState({\r\n            boards: [\r\n                ...boards.slice(0, index),\r\n                ...boards.slice(index + 1)\r\n            ]\r\n        })\r\n    }\r\n\r\n    addBoard() {\r\n        this.setState({\r\n            boards: [\r\n                ...this.state.boards,\r\n                { id: this.state.idCount + 1, name: '', data: [{ text: '', indent: 0 }] }\r\n            ],\r\n            idCount: this.state.idCount + 1\r\n        });\r\n    }\r\n\r\n    render() {\r\n        // console.log('container state : ', this.state);\r\n        return (\r\n            <Container fluid='md' className='board-container-main'>\r\n                {this.state.boards.map((board, i) => (\r\n                    < BoardComponent className='my-2 py-2' key={board.id} board={board} saving={this.state.saving}\r\n                        addBoard={() => this.addBoard()}\r\n                        removeBoard={() => this.removeBoard(board.id)}\r\n                        saveBoard={(newBoard) => this.saveBoard(newBoard, board.id)} />\r\n                ))}\r\n                < Button className='add-button mt-5 float-left outline-primary' onClick={() => this.addBoard()}>\r\n                    <BsPlusCircle className='mr-2' size='1.2em' />\r\n                        Add new board\r\n                </Button>\r\n\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default IndexBoard;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from 'react-bootstrap/NavBar';\r\nimport Nav from 'react-bootstrap/Nav'\r\n\r\nclass NavHeader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <NavBar sticky='top' bg='light' expand='lg'>\r\n                    <NavBar.Brand as={Link} to='/'>\r\n                        DemoApp\r\n                    </NavBar.Brand>\r\n                    <Nav className='mr=auto'>\r\n                        <Nav.Link as={Link} to='/board'>\r\n                            Board\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                    <Nav className='ml-auto'>\r\n                        <Nav.Link as={Link} to='/'>\r\n                            Login\r\n                        </Nav.Link>\r\n                    </Nav>\r\n                </NavBar>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavHeader;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport IndexBoard from './containers/IndexBoard.jsx';\nimport NavHeader from './components/NavHeader.jsx';\n\nclass App extends Component {\n    state = {\n        data: null,\n    };\n\n    render() {\n        return (\n            <Router>\n                <div className='App'>\n                    <NavHeader />\n                    <Switch>\n                        <Route path='/' exact component={Home} />\n                        <Route path='/board' exact component={IndexBoard} />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst Home = () => (\n    <div>\n        <center>\n            <div className='my-4'>\n                <h1>Home Page</h1>\n                <div className='my-4'>\n                    <h4>Navigate to /board</h4>\n                </div>\n            </div>\n        </center>\n    </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}